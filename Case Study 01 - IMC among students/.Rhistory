install.packages("rmarkdown")
# A few initial definitions just to make sure all required packages are installed. Change as needed.
# NOTE: It may echo some weird messages to the PDF on the first compile (package installation messages). Run twice and the problem will (hopefully) go away.
if (!require(ggplot2, quietly = TRUE)){
install.packages("ggplot2")
}
if (!require(devtools, quietly = TRUE)){
install.packages("devtools")
}
if (!require(broom, quietly = TRUE)){
devtools::install_github("dgrtwo/broom")
}
install.packages("devtools")                    # you only have to install it once
library(devtools)
data(mtcars)
fc<-c(2,8:11)
for (i in 1:length(fc)){mtcars[,fc[i]]<-as.factor(mtcars[,fc[i]])}
levels(mtcars$am) <- c("Automatic","Manual")
data(mtcars)
fc<-c(2,8:11)
for (i in 1:length(fc)){mtcars[,fc[i]]<-as.factor(mtcars[,fc[i]])}
levels(mtcars$am) <- c("Automatic","Manual")
# A few initial definitions just to make sure all required packages are installed. Change as needed.
# NOTE: It may echo some weird messages to the PDF on the first compile (package installation messages). Run twice and the problem will (hopefully) go away.
if (!require(ggplot2, quietly = TRUE)){
install.packages("ggplot2")
}
if (!require(devtools, quietly = TRUE)){
install.packages("devtools")
}
if (!require(broom, quietly = TRUE)){
devtools::install_github("dgrtwo/broom")
}
data(mtcars)
fc<-c(2,8:11)
for (i in 1:length(fc)){mtcars[,fc[i]]<-as.factor(mtcars[,fc[i]])}
levels(mtcars$am) <- c("Automatic","Manual")
library(GGally,quietly = T, warn.conflicts = F) # This is just me getting fancy.
model<-aov(mpg~am*disp,data=mtcars)
summary(model)
par(mfrow=c(2,2), mai=.3*c(1,1,1,1))
plot(model,pch=16,lty=1,lwd=2)
# A few initial definitions just to make sure all required packages are installed. Change as needed.
# NOTE: It may echo some weird messages to the PDF on the first compile (package installation messages). Run twice and the problem will (hopefully) go away.
if (!require(ggplot2, quietly = TRUE)){
install.packages("ggplot2")
}
if (!require(devtools, quietly = TRUE)){
install.packages("devtools")
}
if (!require(broom, quietly = TRUE)){
devtools::install_github("dgrtwo/broom")
}
# A few initial definitions just to make sure all required packages are installed. Change as needed.
# NOTE: It may echo some weird messages to the PDF on the first compile (package installation messages). Run twice and the problem will (hopefully) go away.
if (!require(ggplot2, quietly = TRUE)){
install.packages("ggplot2")
}
if (!require(devtools, quietly = TRUE)){
install.packages("devtools")
}
if (!require(broom, quietly = TRUE)){
devtools::install_github("dgrtwo/broom")
}
# A few initial definitions just to make sure all required packages are installed. Change as needed.
# NOTE: It may echo some weird messages to the PDF on the first compile (package installation messages). Run twice and the problem will (hopefully) go away.
if (!require(ggplot2, quietly = TRUE)){
install.packages("ggplot2")
}
if (!require(devtools, quietly = TRUE)){
install.packages("devtools")
}
if (!require(broom, quietly = TRUE)){
devtools::install_github("dgrtwo/broom")
}
# A few initial definitions just to make sure all required packages are installed. Change as needed.
# NOTE: It may echo some weird messages to the PDF on the first compile (package installation messages). Run twice and the problem will (hopefully) go away.
if (!require(ggplot2, quietly = TRUE)){
install.packages("ggplot2")
}
if (!require(devtools, quietly = TRUE)){
install.packages("devtools")
}
if (!require(broom, quietly = TRUE)){
devtools::install_github("dgrtwo/broom")
}
install.packages("knitr", type = "binary")
install.packages("knitr", type = "binary")
install.packages("htmltools")
install.packages(c("codetools", "foreign", "KernSmooth", "Matrix", "nlme"), lib="C:/Program Files/R/R-4.0.3/library")
sudo apt-get install r-base-dev
install.packages(c("codetools", "foreign", "KernSmooth", "Matrix", "nlme"), lib="C:/Program Files/R/R-4.0.3/library")
install.packages("Matrix", lib="C:/Program Files/R/R-4.0.3/library")
install.packages("Matrix")
install.packages("Matrix")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools", lib="C:/Program Files/R/R-4.0.3/library")
install.packages("htmltools", lib="C:/Program Files/R/R-4.0.3/library")
install.packages(c("codetools", "foreign", "htmltools", "KernSmooth", "Matrix", "nlme"), lib="C:/Program Files/R/R-4.0.3/library")
install.packages(c("codetools", "foreign", "htmltools", "KernSmooth", "Matrix", "nlme"), lib="C:/Program Files/R/R-4.0.3/library")
install.packages(c("htmltools", "Matrix"), lib="C:/Program Files/R/R-4.0.3/library")
install.packages(c("htmltools", "Matrix"), lib="C:/Program Files/R/R-4.0.3/library")
# A few initial definitions just to make sure all required packages are installed. Change as needed.
# NOTE: It may echo some weird messages to the PDF on the first compile (package installation messages). Run twice and the problem will (hopefully) go away.
#if (!require(ggplot2, quietly = TRUE)){
#      install.packages("ggplot2")
#      }
#if (!require(devtools, quietly = TRUE)){
#      install.packages("devtools")
#      }
# if (!require(broom, quietly = TRUE)){
#       devtools::install_github("dgrtwo/broom")
#      }
#if (!require(GGally, quietly = TRUE)){
#      install.packages("GGally")
#      }
data(mtcars)
fc<-c(2,8:11)
for (i in 1:length(fc)){mtcars[,fc[i]]<-as.factor(mtcars[,fc[i]])}
levels(mtcars$am) <- c("Automatic","Manual")
library(GGally,quietly = T, warn.conflicts = F) # This is just me getting fancy.
---
title: 'Case Study 01: This is a template'
author: "Hernane Braga and Author 2"
date: "January 17, 2021"
output:
pdf_document:
fig_caption: yes
html_document:
df_print: paged
---
# A few initial definitions just to make sure all required packages are installed. Change as needed.
# NOTE: It may echo some weird messages to the PDF on the first compile (package installation messages). Run twice and the problem will (hopefully) go away.
if (!require(ggplot2, quietly = TRUE)){
install.packages("ggplot2")
}
install.packages("ggplot2", lib="C:/Program Files/R/R-4.0.3/library")
# A few initial definitions just to make sure all required packages are installed. Change as needed.
# NOTE: It may echo some weird messages to the PDF on the first compile (package installation messages). Run twice and the problem will (hopefully) go away.
if (!require(ggplot2, quietly = TRUE)){
install.packages("ggplot2")
}
if (!require(devtools, quietly = TRUE)){
install.packages("devtools")
}
if (!require(broom, quietly = TRUE)){
devtools::install_github("dgrtwo/broom")
}
if (!require(GGally, quietly = TRUE)){
install.packages("GGally")
}
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages("devtools")                    # you only have to install it once
library(devtools)
install_github("rstudio/rmarkdown")             # you only have to install it once
data(mtcars)
fc<-c(2,8:11)
for (i in 1:length(fc)){mtcars[,fc[i]]<-as.factor(mtcars[,fc[i]])}
levels(mtcars$am) <- c("Automatic","Manual")
library(GGally,quietly = T, warn.conflicts = F) # This is just me getting fancy.
model<-aov(mpg~am*disp,data=mtcars)
summary(model)
install.packages("GGally", lib="C:/Program Files/R/R-4.0.3/library")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
bees <- read.csv('fata/CS01_20172.csv')
bees <- read.csv('data/CS01_20172.csv')
base_2016 <- read.csv('data/CS01_20172.csv', sep=';')
View(base_2016)
base_2017 <- read.csv('data/CS01_20172.csv', sep=';')
base_2016 <- read.csv('data/imc_20162.csv', sep=';')
base_2017 <- read.csv('data/CS01_20172.csv', sep=';')
```{r}
knitr::opts_chunk$set(echo = TRUE)
base_2016 <- read.csv('data/imc_20162.csv', sep=';')
base_2017 <- read.csv('data/CS01_20172.csv', sep=';')
plot(pressure)
```{r }
base_2016 <- read.csv('data/imc_20162.csv', sep=';')
base_2017 <- read.csv('data/CS01_20172.csv', sep=';')
base_2016 <- read.csv('data/imc_20162.csv', sep=';')
base_2017 <- read.csv('data/CS01_20172.csv', sep=';')
knitr::opts_chunk$set(echo = TRUE)
base_2016 <- read.csv('data/imc_20162.csv', sep=';')
base_2017 <- read.csv('data/CS01_20172.csv', sep=';')
plot(pressure)
